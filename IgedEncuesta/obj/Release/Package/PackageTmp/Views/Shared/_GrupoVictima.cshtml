@model IEnumerable<IgedEncuesta.Models.mdlEncuesta.Victima>

@{
    var listado = new List<SelectListItem>()
    {
        new SelectListItem()
        {
            Text = "Sí",
            Value = "1"
        },
        new SelectListItem()
        {
            Text = "No",
            Value = "2"
        }
    };
}

@{
    ViewBag.Title = "GrupoVictimas";
    AdministracionInstrumentos.Encuesta objSesion = new AdministracionInstrumentos.Encuesta();
    string userIdApp;
    userIdApp = Request.Cookies["SesionIged"]["UserIdApp"].ToString();
    var modeloHogarJson = objSesion.getValorCampoSesion("MODELOHOGAR", userIdApp);
    List<IgedEncuesta.Models.mdlEncuesta.Victima> modeloHogar = Newtonsoft.Json.JsonConvert.DeserializeObject<List<IgedEncuesta.Models.mdlEncuesta.Victima>>(modeloHogarJson);
    var validaPerfil = objSesion.getValorCampoSesion("VALIDAPERFIL", userIdApp); //TempData["VALIDAPERFIL"].ToString();
    var validaIncluido = objSesion.getValorCampoSesion("VALINCLUIDO", userIdApp);//TempData["VALINCLUIDO"].ToString();
}

<style>
    .ui-widget-overlay {
        opacity: .50;
        filter: alpha(opacity=50);
        -moz-opacity: 0.5;
        -khtml-opacity: 0.5;
        z-index: 1040;
    }
</style>
<br />

<div id="gridContentGrupo" class="marcoGrid" style="width: 100%">
    @{
        // Instanciamiento del helper webgrid
        WebGrid grid = new WebGrid(Model, canPage: false, rowsPerPage: 40, canSort: false,
        selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContentGrupo");
    }

    @grid.GetHtml(

            htmlAttributes: new { id = "gvGrupoVictima" },

                        tableStyle: "grid-view",
                        headerStyle: "grid-view-header",
                        rowStyle: "grid-view-tr-normal",
                        alternatingRowStyle: "grid-view-tr-alternate",
                        footerStyle: "grid-view-pgr",
                        columns: grid.Columns(
                        grid.Column("TIPO_DOC", "TIPO DOC"),
                        grid.Column("DOCUMENTO", "DOCUMENTO"),
                        grid.Column("NOMBRES_COMPLETOS", "NOMBRES"),
                        grid.Column("F_NACIMIENTO", "FECHA NACIMIENTO"),
                        grid.Column(header: "", format: @<text><input type="hidden" class="clasefecha" value="@item.F_NACIMIENTO" id="idpersonafechanacimiento_@item.CONS_PERSONA" style="width:150px"></text>),
                        grid.Column("TIPO_VICTIMA", "ESTADO"),
                        grid.Column(header: "", format: @<text><input type="hidden" class="claseestado" value="@item.TIPO_VICTIMA" id="idpersonaestado_@item.CONS_PERSONA" width="48"></text>),
                        grid.Column("GENERO_HOM", "GENERO"),
                        grid.Column(header: "TIPO PERSONA", format: @item => Html.DropDownList  ("idTipoPersona", ViewBag.Opciones as List<SelectListItem>, new { @class = "classTipoPersona", onchange = "tipoPersona(this)", id = "combotipopersona_" + @item.CONS_PERSONA + "_" + @item.F_NACIMIENTO + "_" + @item.TIPO_VICTIMA + "_" + @item.DOCUMENTO, style = "width:150px" })),

                        grid.Column(header: "GRUPO",
                        format: (item =>
                        {
                            if (@item.TIPO_VICTIMA == "NO INCLUIDO")
                            {
                                return Html.Raw("<img src='" + Url.Content("~/Content/Icons/group_family_off.png") + "' title='Grupo Familiar' style='height:22px;'>");
                            }
                            else
                            {
                                
                                return Html.Raw("<a href='#' id='btnGrupoFamiliar_" + @item.CONS_PERSONA + "' class='grupoFamiliar' alt='" + @item.NOMBRES_COMPLETOS + "' > <img src='" + Url.Content("~/Content/Icons/group_family.png") + "' title='Grupo Familiar' style='height:22px;'></a>");
                            }
                        })),
                        

                        grid.Column(header: "EXCLUIR", format: @<text><a href="#" id="Excluir_@item.CONS_PERSONA|@item.ID_TBPERSONA" class="excluir @item.DOCUMENTO" data-tipodoc="@item.TIPO_DOC"onclick="excluir(this);"><img src="@Url.Content("~/Content/Icons/delete_person.png")" title="Excluir Víctima" style='height: 22px;'></a></text>)//,
                                                                                                                                                                                                                                                                                                                     //grid.Column(header: "AGREGAR SOPORTE", format: @<a hidden="hidden" href="#" id="cargueSoporteTutorICBF_@item.DOCUMENTO" title="Cargue Soporte" onClick="cargarSoporteTutorICBF(this)"><img type="hidden" src="@Url.Content("~/Content/Icons/Attach.png")" height="30" alt="Cargar soporte" /></a>)
                                                                                                                                                                                                                                                                                                                     /*grid.Column(header: "OTRO SOPORTE",
                                                                                                                                                                                                                                                                                                                     format: (item =>
                                                                                                                                                                                                                                                                                                                     {
                                                                                                                                                                                                                                                                                                                         if (@item.TIPO_VICTIMA == "NO INCLUIDO")
                                                                                                                                                                                                                                                                                                                         {
                                                                                                                                                                                                                                                                                                                             return Html.Raw("<img src='" + Url.Content("~/Content/Icons/Attach.png") + "' title='Opción desactivada' style='height:22px;'>");

                                                                                                                                                                                                                                                                                                                         }
                                                                                                                                                                                                                                                                                                                         else
                                                                                                                                                                                                                                                                                                                         {
                                                                                                                                                                                                                                                                                                                             return Html.Raw("<a href='#' id='cargueSoporteTutorICBF' alt='SI PUEDE AGREGAR' > <img src='" + Url.Content("~/Content/Icons/Attach.png") + "' title='Agregar Soporte' style='height:22px;'></a>");
                                                                                                                                                                                                                                                                                                                         }
                                                                                                                                                                                                                                                                                                                     }))*/
                           )
                        )

</div>

<br />
<input hidden type="button" class="" value="Iniciar Entrevista" id="btnIniciarEntrevista" style="margin: auto; height: 30px; padding: 3px; width: 200px; font-family: Roboto;" />
<input type="hidden" id="hdValidaPerfil" value="@validaPerfil" />
<input type='hidden' id='hdValidaIncluido' value='@validaIncluido'>


<div id="dialog" style="display: none; overflow-y: hidden; /*height: 400px*/">

    <div id="panelGrupo" style="/*padding: 10px;*/ /*border: 1px solid #ccc; border-radius: 5px; */" align="center" @* class="bordesDiv2"*@>
        <table>
            <tr id="filaGridGrupo" style="display: block">
                <td style="text-align: center;">
                    <h5 id="tituloEmergente" style="font-size: 14px; font-family: 'Roboto';">GRUPO FAMILIAR DE LA VICTIMA </h5>

                    <div style="">
                        <div id="maestroGrupo" style="width: 900px; /*height: 250px; */overflow: scroll; overflow-x: hidden; overflow-y: auto;">
                        </div>
                    </div>
                </td>
            </tr>

        </table>
    </div>
</div>

<div id="dialog2" style="display: none;">
    <br />
</div>

<div id="dialog3" style="display: none;">
    <form id="myDialog" class="validateDontSubmit">
        <br />
        ¿La encuesta fue diligenciada en papel y ahora será transcrita?
        <br />
        <input class="css-radio requerido radiobutton" type="radio" value="Si" name="codigoHogar" id="rdbSi" style="width: 15px" onchange="codHogarChk(this)" /><label for="rdbSi" class="css-labelRadio ">Si</label>
        <input class="css-radio requerido radiobutton" type="radio" value="No" name="codigoHogar" id="rdbNo" style="width: 15px" onchange="codHogarChk(this)" /><label for="rdbNo" class="css-labelRadio ">No</label>
        <br />
        <br />
        <div id="divCodHogar" style="display: none;">        
                <label class="etiqueta">Código del Hogar:</label>
                <input id="txtCodigoHogar" name="txtCodigoHogar" type="text" placeholder="" style="width: 70px;" maxlength="5" />
            </div>
    </form>
</div>

<!--Andrés Quintero 08/11/2019-->
<div id="divcargueSoporteTutorICBF" hidden>
    <h2>Cargar Soporte Tutor o Cuidador Permanente</h2>
    <a href="#" id="cargueSoporteTutorICBF" title="Cargue Soporte">
        <img src="@Url.Content("~/Content/Icons/Attach.png")" height="30" alt="Soporte Tutor o Cuidador Permanente" />
    </a>
</div>

<div id="dialog-cargueSoporteTutorICBF" style="display: none">
    <table class="tabla1" id="uploadtable">
        <tr>
            <td>
                <input id="fileUploadTutor" type="file" name="fileUploadTutor[0]" accept=".pdf" />
            </td>
        </tr>
    </table>
</div>


<script>
    //andrés quintero 08/112019
    function cargarSoporteTutorICBF(objeto) {
        $("#dialog-cargueSoporteTutorICBF").dialog('open');
    }

    $('#cargueSoporteTutorICBF').click(function (e) {
        $("#dialog-cargueSoporteTutorICBF").dialog('open');
    });

    //andrés quintero 08/112019
    $("#dialog-cargueSoporteTutorICBF").dialog({
        autoOpen: false,
        resizable: false,
        width: 550,
        show: { effect: 'drop', direction: "up" },
        modal: true,
        draggable: false,
        dialogClass: 'dialog',
        hide: 'explode',
        buttons: {
            "Cancelar": function () {
                $(this).dialog("close");
            },
            "Guardar": function () {                
                cargarArchivoTutorICBF();
                
            }
        }
    });
</script>


<style>
    *[hidden] {
        display: none;
    }
</style>

<script>
    var total = '@(Model != null ? Model.Count() : 0)';
    var id = "";
    var tr = "";
    var opcionDialogoGrupo = "";
    if (total == '0') $('#panelHogar').hide();
    
    function jefeHogarChk(jefe) {
        var consecutivo = jefe.value;
        $.ajax(
             {
                 
                 data: { consPersona: consecutivo },
                 dataType: 'json', //el tipo de dato que nos regresara el servidor en este caso regresa html
                 url: '@Url.Action("actualizarJefeHogar", "ConformacionHogar")',
                 success: function (result) {

                 },
                 error: function (error) {

                     alert('linea 301 grupo victima Se presento un error para la persona con Id ' + id);
                 }
             });
    }

    function jefeHogarChk1(jefe) {
        var consecutivo = jefe.value;
        consecutivo = jefe.split("_")[1];
        $.ajax(
             {
                 
                 data: { consPersona: consecutivo },
                 dataType: 'json', //el tipo de dato que nos regresara el servidor en este caso regresa html
                 url: '@Url.Action("actualizarJefeHogar", "ConformacionHogar")',
                 success: function (result) {

                 },
                 error: function (error) {

                     alert('linea 33 GropoVictima Se presento un error para la persona con Id ' + id);
                 }
             });
    }

    function tipoPersona(objeto) {
        
        $("#CargandoDatosMaestro").show();
         var idTipoPersona = objeto.value;
         var iddropdowlist = objeto.id;
         var idPersona = objeto.id.split("_")[1];
         var documento = objeto.id.split("_")[4];         
         //descomentar para activar la imagen en la tabla
         //var idcargueSoporteTutorICBF = 'cargueSoporteTutorICBF_' + documento;
         var idpersonafechanacimiento = 'idpersonafechanacimiento_' + idPersona;
         var fechanacimientoConHora = objeto.id.split("_")[2];
         var estado = objeto.id.split("_")[3];
         var fechanacimiento = fechanacimientoConHora.split(" ")[0];
         var hoy = new Date();
         var diaActual = hoy.getDate();
         var mesActual = hoy.getMonth() + 1;
         var yearActual = hoy.getFullYear();
         var array_fecha = fechanacimiento.split("/");
         var year = parseInt(array_fecha[2]);
         var mes = parseInt(array_fecha[1]);
         var dia = parseInt(array_fecha[0]);
         var totalMiembrosHogar = 0;
         var mayoresedad = 0;
         var menoresedad = 0;
         var menoresedadnoincluido = 0;
         var menoresedadestadoincluido = 0;
         var validaFecha = "";
         var idJefe = "Jefe_" + idPersona + "_" + documento;
         var varloTipoPersonaSeleccionada = "";
         var tipoPersonaSeleccionada = 0;
         var tiPersonaSeleccionadaAutorizado = 0;
         var tiPersonaSeleccionadaTutor = 0;
         var tiPersonaSeleccionadaCuidadorPermanente = 0;
         var tiPersonaSeleccionadaMiembroHogar = 0;
         
         

         if (idTipoPersona == 2) {
             $(objeto).addClass("tutor");
         } else {
             $(objeto).removeClass("tutor");
         }

         //Cuenta el total de miembros de hogar
         $('.classTipoPersona').each(function () {
             totalMiembrosHogar = totalMiembrosHogar + 1;
             varloTipoPersonaSeleccionada = $(this).val();
             if (varloTipoPersonaSeleccionada == '1') {
                 tiPersonaSeleccionadaAutorizado = tiPersonaSeleccionadaAutorizado + 1;
             }
             if (varloTipoPersonaSeleccionada == '2') {
                 tiPersonaSeleccionadaTutor = tiPersonaSeleccionadaTutor + 1;
             }
             if (varloTipoPersonaSeleccionada == '3') {
                 tiPersonaSeleccionadaCuidadorPermanente = tiPersonaSeleccionadaCuidadorPermanente + 1;
             }
             if (varloTipoPersonaSeleccionada == '4') {
                 tiPersonaSeleccionadaMiembroHogar = tiPersonaSeleccionadaMiembroHogar + 1;
             }
         });

         if (tiPersonaSeleccionadaAutorizado > 0 && tiPersonaSeleccionadaTutor > 0) {
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
             $("#CargandoDatosMaestro").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");
             
             $("#btnIniciarEntrevista").hide();
             alert("No puede seleccionar Autorizado y Tutor en el mismo Hogar");

             return;
         }

         if (tiPersonaSeleccionadaAutorizado > 0 && tiPersonaSeleccionadaCuidadorPermanente > 0) {
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("No puede seleccionar Autorizado y Cuidador Permanente en el mismo Hogar");

             return;
         }

         if (tiPersonaSeleccionadaTutor > 0 && tiPersonaSeleccionadaCuidadorPermanente > 0) {
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("No puede seleccionar Tutor y Cuidador Permanente en el mismo Hogar");

             return;
         }

         if (tiPersonaSeleccionadaAutorizado > 1 ) {
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("No puede seleccionar mas de un Autorizado");

             return;
         }

         if (tiPersonaSeleccionadaTutor > 1) {
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("No puede seleccionar mas de un Tutor");

             return;
         }

         if (tiPersonaSeleccionadaCuidadorPermanente > 1) {
             $("#CargandoDatosMaestro").hide();
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("No puede seleccionar mas de un Cuidiador Permanente");
             return;
         }

         //Cuenta el total de mayores y menores de edad
         $('.clasefecha').each(function () {
             validaFecha = $(this).val();
             var array_fechaVF = validaFecha.split("/");
             var yearVF = parseInt(array_fechaVF[2]);
             var mesVF = parseInt(array_fechaVF[1]);
             var diaVF = parseInt(array_fechaVF[0]);

             if (yearVF >= yearActual) {
                 $("#CargandoDatosMaestro").hide();
                 return;
             } else if ((mesVF >= mesActual) && (diaVF > diaActual)) {

                 edad = (yearActual - 1) - yearVF;
             }
             else {
                 edad = yearActual - yearVF;
             }
             if (edad > 17 ) {
                 mayoresedad = mayoresedad + 1;
             }
             if (edad < 18 ) {
                 menoresedad = menoresedad + 1;
             }

         });

         //Valida que la fecha de nacimiento no sea mayor a la fecha actual
         if (year >= yearActual) {
             $("#CargandoDatosMaestro").hide();
             return;
         } else if ((mes >= mesActual) && (dia > diaActual)) {

             edad = (yearActual - 1) - year;
         }
         else {
             edad = yearActual - year;
         }

         //Andrés Quintero 21/10/2019 valida la edad para la persona seleccionada

         if (edad < 18 && (idTipoPersona == 1 || idTipoPersona == 2 || idTipoPersona == 3)) {
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("El Autorizado, Tutor y Cuidador Permanente no puede ser menor de edad");
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
             
             return;
         }

         if (estado == "NO INCLUIDO"  && idTipoPersona == 1 ) {
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("El Autorizado debe estar Incluido en el RUV");
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
             return;
         }

         if (totalMiembrosHogar < 2 && idTipoPersona == 2) {
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("Para seleccionar Tutor debe haber minimo 2 miembros de hogar en el grupo familiar");
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);

             return;
         }

         if (totalMiembrosHogar > 1 && idTipoPersona == 2 && menoresedad < 1 ) {
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("Para seleccionar Tutor debe haber minimo 1 menor de edad en el grupo familiar");
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);

             return;
         }

         if (idTipoPersona == 3 && mayoresedad < 2) {
             $("#CargandoDatosMaestro").hide();
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
             alert("Para seleccionar Cuidador Permanente debe haber minimo un miembro de hogar mayor de edad diferente del Cuidador");
             $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);

             return;
         }
         

         var validadorpersona = 0;
         if (idTipoPersona == 1 || idTipoPersona == 4) {


                $.ajax( {//type: 'POST',
                    data: { consPersona: idPersona, documento: documento, tipopersona: idTipoPersona},
                        dataType: 'json',
                        url: '@Url.Action("consultarPersona", "ConformacionHogar")',
                        success: function (result) {
                            if (JSON.stringify(result) == '1') {
                                validadorpersona = 1;
                                $("#CargandoDatosMaestro").hide();
                                alert("Esta persona fue encuestada previamente, no la puede agregar como autorizado ni como miembro de hogar.");
                                $("[id*=" + "'" + iddropdowlist + "'" + "]").val(0);
                                return;

                            }

                            if (JSON.stringify(result) == '0') {
                                validadorpersona = 0;
                                $("#CargandoDatosMaestro").hide();

                            }
                        },
                        error: function (error) {
                            $("#CargandoDatosMaestro").hide();
                            alert('_GrupoVictima linea 557, Se presento un error para la persona con Id ' + id);

                        }
            });

         }


         if (idTipoPersona == 1 || idTipoPersona == 2 || idTipoPersona == 3 /*|| idTipoPersona == 4*/) {
              //Descomentar para que se muestre la imagen en la tabla
             //$("#"+idcargueSoporteTutorICBF).css("display", "block");
                 jefeHogarChk1(idJefe);
         }

         //Andrés Quintero 11/11/2019
         $("#CargandoDatosMaestro").hide();


         if (tiPersonaSeleccionadaTutor > 0) {
             $("#divcargueSoporteTutorICBF").css("display", "block");             
         }

         if (tiPersonaSeleccionadaAutorizado > 0 ) {
             $("#btnIniciarEntrevista").show();
             $("#divcargueSoporteTutorICBF").css("display", "none");             
         }

         if (tiPersonaSeleccionadaCuidadorPermanente > 0) {
             $("#divcargueSoporteTutorICBF").css("display", "block");             
         }

         if (tiPersonaSeleccionadaTutor == 0 && tiPersonaSeleccionadaAutorizado == 0 && tiPersonaSeleccionadaCuidadorPermanente == 0) {
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");
             
         }

         if (tiPersonaSeleccionadaMiembroHogar == 0) {
             $("#btnIniciarEntrevista").hide();
             $("#divcargueSoporteTutorICBF").css("display", "none");
             
         }

         if (tiPersonaSeleccionadaAutorizado == 1 && totalMiembrosHogar == 1) {
             $("#btnIniciarEntrevista").show();
         }

        $.ajax(
             {
                data: { consPersona: idPersona, idTipoPersona: idTipoPersona},
                 dataType: 'json', //el tipo de dato que nos regresara el servidor en este caso regresa html
                 url: '@Url.Action("asignarTipoPersona", "ConformacionHogar")',
                 success: function (result) {

                 },
                 error: function (error) {
                     alert('linea 678 grupovictima Se presento un error para la persona con Id ' + id);
                 }
             });
        $("#CargandoDatosMaestro").hide();

  }

         function excluir(obj) {
             id = obj.id;
             opcionDialogo = 1;
             $("#CargandoDatosMaestro").show();
             window.confirm("¿Esta seguro de excluir esta persona de la conformación del hogar?");
             return false;
             
         }

@*    window.confirm = function (message) {

        $(document.createElement('div'))
            .attr({ 'class': 'dialog' })
            .html(message)
            .dialog({
                buttons: {
                    OK: { id: 'Ok', text: 'Aceptar', 'class': 'butonAlert', click: function () { $(this).dialog("close"); excluirVictima(); } },
                    Cancel: { id: 'Cancel', text: 'Cancelar', 'class': 'butonAlert', click: function () { $(this).dialog("close");} },
                    //OK: function () { $(this).dialog('close'); }, 'class': 'butonAlert'
                },
                close: function () { $(this).remove(); },
                resizable: false,
                height: 150,
                width: 300,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: false,
                dialogClass: 'dialog butonAlert',
                hide: 'explode'
            });
    };
    *@
    function excluirVictima() {
        var idTemp = id;
        id = id.substring(8);
        id = id.substring(0, id.indexOf('|'));
        document.body.style.cursor = "wait";
        var idPersona = idTemp.substring(idTemp.indexOf('|')+1);
        rbClick = true;
        var div = $('#maestroHogar');
        var nombres;
        $.ajax(
             {
                 
                 data: { idVictima: id, idPersona: idPersona, opcion: '2' },
                 dataType: 'html', //el tipo de dato que nos regresara el servidor en este caso regresa html
                 url: '@Url.Action("actualizarMaestroHogar", "ConformacionHogar")',
                 success: function (result) {
                     //cuando se ejecuta bien la funcion agregara al div ajaxDiv el contenido que recibio del servidor
                     document.getElementById("maestroHogar").innerHTML = "";
                     $('#filaGridMaestro').hide('slow');
                     $("#CargandoDatosMaestro").hide();
                     div.append(result);
                     document.body.style.cursor = "default";
                 },
                 error: function (error) {
                     // si hay un error lanzara el mensaje de error
                     alert('Linea 780 grupovictima Se presento un error para la persona con Id ' + id);
                 }
             });
         }
         
         $('.grupoFamiliar').click(function () {
             $('html, body').animate({ scrollTop: 0 }, 0);
             document.body.style.cursor = "wait";
             $("#CargandoDatos").show();
             var consPers = $(this).attr("id").substring(17);
             var div = $('#maestroGrupo');


             $('#gvGrupoVictima tbody tr').on('click', function (e) {
                 nombres = $(this).find('td:nth-child(3)').text();
                 
             });

             $.ajax(
                  {
                      
                      data: { consPersona: consPers },
                      dataType: 'html', //el tipo de dato que nos regresara el servidor en este caso regresa html  grupoFamiliarModeloIntegrado
                      //url: '@Url.Action("grupoFamiliar", "ConformacionHogar")',
                      url: '@Url.Action("grupoFamiliarModeloIntegrado", "ConformacionHogar")',
                      success: function (result) {
                          //cuando se ejecuta bien la funcion agregara al div ajaxDiv el contenido que recibio del servidor
                          document.getElementById("maestroGrupo").innerHTML = "";
                          div.append(result);
                          document.body.style.cursor = "default";
                          $("#CargandoDatos").hide();
                          $("#tituloEmergente").text("GRUPO FAMILIAR DE " + nombres);
                          $("#dialog").dialog(
                                                  {
                                                      dialogClass: 'dialog fondo2',
                                                      width: 1000,
                                                      shadow: true,
                                                      show: { effect: 'drop', direction: "up" },
                                                      modal: true,
                                                      draggable: false,
                                                      hide: 'explode',
                                                      close: function (event, ui) {
                                                      },
                                                      buttons: {
                                                          "OK": function () {
                                                              $(this).dialog("close");
                                                              $(this).dialog('destroy').remove();
                                                              actualizarMaestroHogarVGF();
                                                          }

                                                      }

                                                  }
                          );
                      },
                      error: function (error) {
                          
                          alert('linea 85 grupovictima Se presento un error para la persona con consecutivo ' + consPersona);
                      }
                  });
         });

              function actualizarMaestroHogarVGF() {

                  id = id.substring(8);
                  
                  rbClick = true;
                  var div = $('#maestroHogar');

                  
                  $.ajax(
                       {
                           
                           data: { idVictima: "", opcion: '3' },
                           dataType: 'html', //el tipo de dato que nos regresara el servidor en este caso regresa html
                           url: '@Url.Action("actualizarMaestroHogar", "ConformacionHogar")',
                           
                           success: function (result) {
                               //cuando se ejecuta bien la funcion agregara al div ajaxDiv el contenido que recibio del servidor
                               document.getElementById("maestroHogar").innerHTML = "";
                               $('#filaGridMaestro').hide('slow');
                               div.append(result);

                           },
                           error: function (error) {
                               
                               alert('Se presento un error al actualizar la estructura del hogar.');
                           }
                       });
                   }

              $('#btnIniciarEntrevista').on('click', function (e) {
                  
                  document.body.style.cursor = "wait";
                  var validaPerfil = $("#hdValidaPerfil").val();
                  var validaIncluido = $("#hdValidaIncluido").val();
                  var validaTipoPersona = "0";
                  var autorizado = 0;
                  var tutor = 0;
                  var cuidador_permanente = 0;
                  var miembro_hogar = 0;
                  var noseleccionopersona = 0;
                  var totalIncluidos = 0;
                  var totalNoIncluidos = 0;
                  var validaestado = "";
                  var hoy = new Date();
                  var diaActual = hoy.getDate();
                  var mesActual = hoy.getMonth() + 1;
                  var yearActual = hoy.getFullYear();
                  var validaFecha = "";
                  var validadorparapermitirTutur = 0;
                  var menoresdeedad = 0;
                  var mayoresdeedad = 0;

                  
                  //cuenta el total de estados por estado
                  $('.claseestado').each(function () {
                      validaestado = $(this).val();
                      if (validaestado == 'INCLUIDO') {
                          totalIncluidos = totalIncluidos + 1;
                      }
                      if (validaestado == 'NO INCLUIDO') {
                          totalNoIncluidos = totalNoIncluidos + 1;
                      }

                  });

                  $('.clasefecha').each(function () {
                      validaFecha = $(this).val();
                      var array_fechaVF = validaFecha.split("/");
                      var yearVF = parseInt(array_fechaVF[2]);
                      var mesVF = parseInt(array_fechaVF[1]);
                      var diaVF = parseInt(array_fechaVF[0]);

                      if (yearVF >= yearActual) {
                          return;
                      } else if ((mesVF >= mesActual) && (diaVF > diaActual)) {

                          edad = (yearActual - 1) - yearVF;
                      }
                      else {
                          edad = yearActual - yearVF;
                      }
                      if (edad > 17) {
                          mayoresdeedad = mayoresdeedad + 1;
                      }
                      if (edad < 18) {
                          menoresdeedad = menoresdeedad + 1;
                      }
                  });
                  

                  $('.classTipoPersona').each(function () {
                      validaTipoPersona = $(this).val();
                      

                      if (validaTipoPersona == "0") {
                          noseleccionopersona = noseleccionopersona + 1;
                          
                      }

                      if (validaTipoPersona == "1") {
                          autorizado = autorizado + 1;

                      }
                      if (validaTipoPersona == "2") {
                          tutor = tutor + 1;
                      }
                      if (validaTipoPersona == "3") {
                          cuidador_permanente = cuidador_permanente + 1;
                      }
                      if (validaTipoPersona == "4") {
                          miembro_hogar = miembro_hogar + 1;
                      }

                  });

                  if (noseleccionopersona > 0) {
                      alert("Seleccione tipo persona........");
                      return;
                  }

                  if (validaTipoPersona == "0") {
                      alert("Seleccione tipo persona");
                      return;

                  }

                  if (autorizado > 1) {
                      $("#divcargueSoporteTutorICBF").css("display", "none");
                      
                      alert("Seleccionó mas de un Autorizado");
                      return;
                  }

                  if (tutor > 1) {
                      $("#divcargueSoporteTutorICBF").css("display", "none");
                      
                      alert("Seleccionó mas de un Tutor");
                      return;
                  }

                  if (cuidador_permanente > 1) {
                      $("#divcargueSoporteTutorICBF").css("display", "none");
                      
                      alert("Seleccionó mas de un Cuidador permanente");
                      return;
                  }

                  if (autorizado > 0 && tutor > 0) {
                      $("#btnIniciarEntrevista").hide();
                      $("#divcargueSoporteTutorICBF").css("display", "none");
                      
                      alert("No puede seleccionar un autorizado y un tutor en el mismo grupo familiar");
                      return;
                  }

                  if (autorizado > 0 && cuidador_permanente > 0) {
                      $("#btnIniciarEntrevista").hide();
                      $("#divcargueSoporteTutorICBF").css("display", "none");
                      
                      alert("No puede seleccionar un autorizado y un cuidador permanente en el mismo grupo familiar");
                      return;
                  }

                  if (tutor > 0 && cuidador_permanente > 0) {
                      $("#divcargueSoporteTutorICBF").css("display", "none");
                      
                      $("#btnIniciarEntrevista").hide();
                      alert("No puede seleccionar un tutor y un cuidador permanente en el mismo grupo familiar");
                      return;
                  }

                  if (autorizado == 0 && tutor == 0 && cuidador_permanente == 0) {
                      $("#divcargueSoporteTutorICBF").css("display", "none");                      
                      alert("Debe seleccionar un miembro de hogar como Autorizado, Tutor o Cuidador Permanente");
                      return;
                  }

                  if (validaPerfil == "NO" && validaIncluido == "SI") {
                      $("#divcargueSoporteTutorICBF").css("display", "none");
                      
                      alert("Por favor seleccione al menos una persona incluida en el Hogar preliminar.");
                      return;
                  }

                  if (tutor > 0 && tutor < 2) {

                      if (mayoresdeedad > 1) {
                          $("#divcargueSoporteTutorICBF").css("display", "none");                          
                          alert("Para poder seleccionar Tutor solo debe haber 1 miebro de hogar mayor de 18 años.");
                          return;
                      }
                      if (mayoresdeedad < 2){
                          var retornorFuncion = validarEstadoyEdad();

                          if (retornorFuncion == 0) {
                              $("#divcargueSoporteTutorICBF").css("display", "none");
                              
                              alert("Para conformar grupo familiar con Tutor, debe haber minimo un menor de edad con estado Incluido y maximo una persona mayor de edad como tutor.");
                              return;
                          }
                      }


                  }
                        //Comentado andres quintero el 21/10/2019, esta validación es para verificar el check de jefe de hogar
                           $('input:radio[name="codigoHogar"]').filter('[value="No"]').prop('checked', true);
                           $('#divCodHogar').hide();
                           $("#dialog3").dialog(
                                                   {

                                                       height: 220,
                                                       width: 450,
                                                       dialogClass: 'dialog butonAlert',
                                                       show: { effect: 'drop', direction: "up" },
                                                       modal: true,
                                                       draggable: false,
                                                       hide: 'explode',
                                                       buttons: [
                                                           {
                                                               text: "Aceptar",
                                                               type: "submit",
                                                               form: "myDialog",
                                                               click: function () {
                                                                   var isValid = $("#myDialog")[0].checkValidity();
                                                                   if (isValid) {
                                                                       $(this).dialog("close");
                                                                       if (jQuery("input[name=codigoHogar]:checked").val() == 'Si') {
                                                                           opcionDialogoGrupo = 2;
                                                                           enrutarOpcionDialogo();
                                                                       }
                                                                       else {
                                                                           opcionDialogoGrupo = 1;
                                                                           enrutarOpcionDialogo();
                                                                       }

                                                                   }
                                                               }
                                                           },
                                                           {
                                                               text: "Cancelar",
                                                               click: function () {
                                                                   $(this).dialog("close");
                                                                   $("#btnIniciarEntrevista").show();
                                                               }
                                                           }

                                                       ]

                                                   }
                           );

              });

                   function mostrarDialogo(mensaje) {
                       $("#dialog2").html(mensaje);

                       if (opcionDialogoGrupo == 1)
                           $("#dialog2").height = '20px';
                       else
                           $("#dialog2").height = '160px';

                       $("#dialog2").dialog(
                                               {
                                                   height: opcionDialogoGrupo == 1 ? 130 : 160,
                                                   width: 450,
                                                   dialogClass: 'dialog butonAlert',
                                                   show: { effect: 'drop', direction: "up" },
                                                   modal: true,
                                                   draggable: false,
                                                   hide: 'explode',
                                                   buttons: {
                                                       "Si": function () {
                                                           $(this).dialog("close");
                                                           enrutarOpcionDialogo();
                                                       },
                                                       "No": function () {
                                                           $(this).dialog("close");


                                                       }
                                                   }
                                               }
                       );

                   }

                   function enrutarOpcionDialogo() {
                       
                       switch (opcionDialogoGrupo) {
                           case 1:
                               opcionDialogoGrupo = 3;
                               mostrarDialogo("Una vez iniciada la entrevista no se podrán realizar cambios en la conformación del hogar.<br />¿Esta seguro de que la conformación del hogar es la correcta?")
                               return false;
                           case 2:
                               verificarCodigoHogar();
                               return false;
                           case 3:
                               
                               iniciarEntrevista();
                               return false;

                       }
                   };

                   function codHogarChk(r) {
                       codigo = $('#txtCodigoHogar').val('');
                       if (r.value == 'Si') {
                           $('#divCodHogar').show('slow');
                           $("input").prop('required', true);

                       }
                       else {
                           $('#divCodHogar').hide('slow');
                           $("input").prop('required', false);
                       }
                   }

                   function verificarCodigoHogar() {
                       document.body.style.cursor = "wait";
                       var codigo;
                       codigo = $('#txtCodigoHogar').val();

                       $.ajax(
                            {   
                                data: { codHogar: codigo },
                                dataType: 'json', //el tipo de dato que nos regresara el servidor en este caso regresa json
                                url: '@Url.Action("verificarCodigoHogar", "ConformacionHogar")',
                                success: function (result) {
                                    if (result == "") {
                                        opcionDialogoGrupo = 1;
                                        enrutarOpcionDialogo();
                                        document.body.style.cursor = "default";
                                    }
                                    else
                                        alert(result);

                                },
                                error: function (error) {
                                    alert('Se presento un error al verificar el código de Hogar linea 1205 funcion verificarCodigoHogar() vista _GrupoVictima.cshtml ' + error);
                                }
                            });
                        }

                    function iniciarEntrevista() {
                                var codigo;
                                codigo = $('#txtCodigoHogar').val();                                
                                $.ajax(
                                     {
                                         data: { codHogar: codigo },
                                         dataType: 'json', //el tipo de dato que nos regresara el servidor en este caso regresa json
                                         url: '@Url.Action("iniciarEntrevista", "ConformacionHogar")',
                                         success: function (result) {
                                             if (result == "1") {
                                                 alert("Comenzar entrevista");
                                                 $("#btnIniciarEntrevista").hide();
                                                 window.location.href = '@Url.Action("Encuesta", "Encuesta")';
                                             }
                                             else
                                                 alert(result);

                                         },
                                         error: function (error) {
                                             alert('Se presentó una desconexión temporal en las bases, favor intentr de nuevo.');
                                         }
                                     });
                   }

         $(document).on('submit', '.validateDontSubmit', function (e) {
             e.preventDefault();
             return false;
                    });

         function doSearch(r) {
             const tableReg = document.getElementById('gvGrupoVictima');
             const searchText = r;
             let total = 0;


             // Recorremos todas las filas con contenido de la tabla
             for (let i = 1; i < tableReg.rows.length; i++) {
                 // Si el td tiene la clase "noSearch" no se busca en su cntenido
                 if (tableReg.rows[i].classList.contains("noSearch")) {
                     continue;
                 }

                 let found = false;
                 const cellsOfRow = tableReg.rows[i].getElementsByTagName('td');
                 for (let j = 0; j < cellsOfRow.length && !found; j++) {
                     const compareWith = cellsOfRow[j].innerHTML.toLowerCase();
                     if (searchText.length == 0 || compareWith.indexOf(searchText) > -1) {
                         found = true;
                         total++;
                     }

                 }
                 
             }

             
             const lastTR = tableReg.rows[tableReg.rows.length - 1];
             const td = lastTR.querySelector("td");
             lastTR.classList.remove("hide", "red");
             if (searchText == "") {
                 lastTR.classList.add("hide");
             } else if (total) {
             } else {
                 lastTR.classList.add("red");
                 td.innerHTML = "No se han encontrado coincidencias";
             }
         }

         function validarEstadoyEdad() {
             var retorno = 0;
             var estado = "";
             var fechanacimiento = "";
             var hoy = new Date();
             var diaActual = hoy.getDate();
             var mesActual = hoy.getMonth() + 1;
             var yearActual = hoy.getFullYear();
             //cuenta el total de estados por estado
             $('.classTipoPersona').each(function () {
                 if (!($(this).hasClass("tutor"))) {
                     estado = $(this).val();
                     var im = $(this).attr("id");
                     var estado = im.split('_')[3];
                     fechanacimiento = im.split('_')[2];
                     if (estado == 'INCLUIDO') {
                            var array_fechaVF = fechanacimiento.split("/");
                            var yearVF = parseInt(array_fechaVF[2]);
                            var mesVF = parseInt(array_fechaVF[1]);
                            var diaVF = parseInt(array_fechaVF[0]);

                             if (yearVF >= yearActual) {
                                 return;
                             } else if ((mesVF >= mesActual) && (diaVF > diaActual)) {

                                 edad = (yearActual - 1) - yearVF;
                             }
                             else {
                                 edad = yearActual - yearVF;
                             }
                             if (edad < 18) {
                                 retorno = 1;

                             } else {
                                 
                             }


                     }
                     if (estado == 'NO INCLUIDO') {
                         
                     }
                 }


             });
             return retorno;
         }

</script>

<script>

         function cargarArchivoTutorICBF() {
             var varloTipoPersonaSeleccionada = 0;
             var tipopersona = 0;
             //Cuenta el total de miembros de hogar
             $('.classTipoPersona').each(function () {
                 varloTipoPersonaSeleccionada = $(this).val();
                 if (varloTipoPersonaSeleccionada == '2') {
                     tipopersona = 2;
                 }
                 if (varloTipoPersonaSeleccionada == '3') {
                     tipopersona = 3;
                 }
             });
             var data = new FormData();
             var files = $("#fileUploadTutor").get(0).files;
             if (files.length > 0) {
                 data.append("UploadedImageTutor", files[0]);
             }

             data.append("tipopersona", tipopersona);
             var ajaxRequest = $.ajax({
                 type: "POST",
                 url: '@Url.Action("cargarSoporteTutor", "Encuesta")',
            contentType: false,
            processData: false,
            data: data
        });

        ajaxRequest.done(function (xhr, textStatus) {
            
            $("#dialog-cargueSoporteTutorICBF").dialog('close');
            alert("Cargue exitoso.");
            $("#btnIniciarEntrevista").show();
        });

        ajaxRequest.error(function (xhr, textStatus) {
            alert("Error en el cargue. Verifique la ruta, donde se almacena el archivo");
        });
         }

</script>


